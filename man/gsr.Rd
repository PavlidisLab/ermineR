% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/testWrappers.R
\name{gsr}
\alias{gsr}
\title{GSR}
\usage{
gsr(scores, scoreColumn = 1, bigIsBetter = FALSE, logTrans = FALSE,
  annotation, aspects = c("Molecular Function", "Cellular Component",
  "Biological Process"), iterations, geneReplicates = c("mean", "best"),
  pAdjust = c("FDR", "Bonferroni"), geneSetDescription = "Latest_GO",
  customGeneSets = NULL, minClassSize = 20, maxClassSize = 200,
  output = NULL, return = TRUE)
}
\arguments{
\item{scores}{A data.frame. Rownames have to be gene identifiers, followed by
any number of columns. The column used for scoring is chosen by \code{scoreColumn}.
See \url{http://erminej.msl.ubc.ca/help/input-files/gene-scores/}
for information abot how to specify scores. (for test = ORA, GSR and ROC)}

\item{scoreColumn}{Integer or character. Which column of the \code{scores} data.frame
to use as scores. Defaults to first column of \code{scores}. See
\url{http://erminej.msl.ubc.ca/help/input-files/gene-scores/} for details.
(for test = ORA, GSR and ROC)}

\item{bigIsBetter}{Logical. If TRUE large scores are considered to be higher.
\code{FALSE} by default (as in p values).}

\item{logTrans}{Logical. Should the data be -log10 transformed. Recommended for 
p values. \code{FALSE} by default}

\item{annotation}{Annotation. A file path, a data.frame or a platform short 
name (eg. GPL127). If given a platform short name it will be downloaded
from annotation repository of Pavlidis Lab (\url{www.chibi.ubc.ca/microannots/}). 
Note that if there is a file or folder with the same name as the platform 
name in the directory, that file will be read instead of getting a copy from 
Pavlidis Lab. If this file isn't a valid annotation file, the function will fail.
If providing a custom annotation file, see
\url{erminej.msl.ubc.ca/help/input-files/gene-annotations/}}

\item{aspects}{Character vector. Which Go aspects to include in the analysis.
Can be in long form (eg. 'Molecular Function') or short form (eg. \code{c('M','C','B')})}

\item{iterations}{Number of iterations (test = GSR and CORR methods only)}

\item{geneReplicates}{What to do when genes have multiple scores in input file
(due to multiple probes per gene)}

\item{pAdjust}{Which multiple test correction method to use. Can be "FDR" or
'Westfall-Young' (slower).}

\item{geneSetDescription}{"Latest_GO", a file path that leads to a GO XML file
or a URL that leads to a go ontology file that ends with rdf-xml.gz. Note that
this is a mandatory argument. It defaults to Latest_GO but that option won't
work if you don't have a working internet connection. See \url{http://erminej.msl.ubc.ca/help/input-files/gene-set-descriptions/}
for details}

\item{customGeneSets}{Directory path or a named list of character strings.
Use this option to create your own gene sets. If you provide directory you can
specify probes or gene symbols to include in your gene sets. 
See \url{http://erminej.msl.ubc.ca/help/input-files/gene-sets/}
for information about format for this file. If you are providing a list, only gene
symbols are accepted.}

\item{minClassSize}{minimum class size}

\item{maxClassSize}{maximum class size}

\item{output}{Output file name.}

\item{return}{If results should be returned. Set to FALSE if you only want a file}
}
\description{
The goal of this method is the same as for \code{\link{ora}}: to
  provide a p value for each gene set. The key difference lies in that ORA
  requires that you select a threshold for “gene selection”, whereas GSR does
  not.
  
  GSR uses all the gene scores for the genes in a gene set to produce a
  score. This means that genes that do not meet a statistical threshold for
  selection can contribute to the score. In addition, more information
  contained in the gene scores is preserved than in ORA, because ORA is
  essentially rank-based, whereas GSR uses the gene scores themselves. (The
  precision-recall method is even more close to the ORA method).
  
  In practice, ORA and GSR can yield similar results; however, we have found 
  that GSR tends to be more robust than ORA (because there is no threshold to
  set) and can give interesting results in situations where ORA doesn’t work 
  as well (when no genes meet the predetermined selection threshold).
  
  GSR is appropriate when you have reasonably good trust in the values of
  your gene scores, as opposed to the ranking. Its key advantage over ORA is
  that you do not have to set a threshold gene score. If you trust the
  ranking of gene scores more, the precision-recall or ROC methods might be
  useful.
  
  Method overview taken from: 
  \url{http://erminej.msl.ubc.ca/help/tutorials/running-an-analysis-resampling/}
}
